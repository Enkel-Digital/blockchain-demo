import{_ as c,d as p,o as n,c as o,a as s,w as f,v as m,k as b,F as d,s as h,t as a,f as r,g,n as _}from"./index.ee2f944b.js";import{a as u}from"./sha256.4d35b2a5.js";import"./_commonjsHelpers.dffb1198.js";import"./core.41ff40ea.js";const v=p({name:"MerkelTrees",data(){return{input:"",hash:"",nodes:[]}},watch:{},created(){this.updateHash()},methods:{sha256:u,nodeLength(){if(this.nodes.length%12===0)return{"is-1":!0};if(this.nodes.length%11===0)return{"is-1":!0};if(this.nodes.length%10===0)return{"is-1":!0};if(this.nodes.length%9===0)return{"is-1":!0};if(this.nodes.length%8===0)return{"is-1":!0};if(this.nodes.length%7===0)return{"is-1":!0};if(this.nodes.length%6===0)return{"is-2":!0};if(this.nodes.length%5===0)return{"is-2":!0};if(this.nodes.length%4===0)return{"is-3":!0};if(this.nodes.length%3===0)return{"is-4":!0};if(this.nodes.length%2===0)return{"is-6":!0}},addNode(){this.input!==""&&(this.nodes.push(this.input),this.input="")},async updateHash(){this.hash=u(this.input,{outputLength:256}).toString()},reset(){this.input="",this.hash="",this.nodes=[]}}}),y={class:"section"},H={class:"columns is-multiline"},k=s("div",{class:"column"},[s("p",{class:"title"},"Create Merkel Tree")],-1),w={class:"column is-narrow"},S={class:"box"},A=r(" Enter your data "),N={class:"field has-addons"},T={class:"control is-expanded"},C={class:"control"},B={class:"box"},L={class:"columns is-multiline"},M=s("br",null,null,-1),V={class:"box"},$=s("br",null,null,-1),E={class:"box"},D=s("p",{class:"subtitle is-4"},"Hash",-1),F={class:"word-wrap"},I=g('<details class="content mt-4"><summary style="cursor:pointer;">Types of Hashes</summary><ul><li><b>SHA256</b> is a hash function from the SHA2 hash function family with a 256 bit output length. </li><li><b>SHA256</b> is one of the most popular hash functions, and is used by Bitcoin. This will also be the hash function used for the Proof of Work demo later on. </li><li><b>SHA3</b> is a hash function from the SHA3 hash function family with a 256 bit output length. </li><li><b>SHA3</b> is supposed to be more secure than <b>SHA256</b>, and it is used by the Ethereum blockchain. </li></ul></details>',1);function K(t,i,W,z,P,R){return n(),o("div",y,[s("div",H,[k,s("div",w,[s("button",{class:"button is-light is-danger is-fullwidth",onClick:i[0]||(i[0]=(...e)=>t.reset&&t.reset(...e))}," Reset ")])]),s("div",S,[s("label",null,[A,s("div",N,[s("div",T,[f(s("input",{"onUpdate:modelValue":i[1]||(i[1]=e=>t.input=e),type:"text",class:"input",placeholder:"Whatever data you want to hash",onKeypress:i[2]||(i[2]=b((...e)=>t.addNode&&t.addNode(...e),["enter"]))},null,544),[[m,t.input]])]),s("div",C,[s("button",{class:"button is-light is-success",onClick:i[3]||(i[3]=(...e)=>t.addNode&&t.addNode(...e))}," Add node ")])])])]),s("div",B,[s("div",L,[(n(!0),o(d,null,h(t.nodes,(e,l)=>(n(),o("div",{key:l,class:_(["column box",t.nodeLength()])},[r(" Input data: "+a(e)+" ",1),M,r(" Hash: "+a(t.sha256(e).toString()),1)],2))),128))])]),s("div",V,[(n(!0),o(d,null,h(t.nodes,(e,l)=>(n(),o("div",{key:l,class:"box"},[r(" Input data: "+a(e)+" ",1),$,r(" Hash: "+a(t.sha256(e).toString()),1)]))),128))]),s("div",E,[D,s("code",F,a(t.hash),1),I])])}var J=c(v,[["render",K]]);export{J as default};
